{"version":3,"sources":["model/playersSlice.js","model/gameSlice.js","components/Icons/Icons.jsx","components/PlayersTable/PlayersTable.jsx","components/Timer/Timer.jsx","App.js","model/store.js","serviceWorker.js","index.js","components/Timer/Timer.module.scss"],"names":["playersSlice","createSlice","name","initialState","players","Array","fill","map","_","i","id","key","role","killed","kicked","isEditingName","isEditingRole","fines","first","second","third","lifeCycle","reducers","kill","state","action","console","log","player","payload","lifeCycleKey","kick","editName","editRole","setName","setRole","setFine","fine","selectPlayers","actions","playersReducer","reducer","gameSlice","isPlaying","gameCycle","title","fullTitle","currentTimeOfDay","play","setNextTime","selectIsPlaying","game","selectGameCycle","selectCurrentTimeOfDay","gameReducer","MafiaSvg","height","viewBox","width","xmlns","d","MafiaIcon","props","Icon","component","DonSvg","DonIcon","ManSvg","ManIcon","SheriffSvg","version","x","y","points","SheriffIcon","WomanSvg","WomanIcon","PlayerIcon","Text","Typography","Option","Select","playersRole","PlayersTable","useSelector","dispatch","useDispatch","useEffect","columns","dataIndex","render","onChange","e","target","value","placeholder","onBlur","onKeyPress","handleKeyPress","type","delete","onDoubleClick","defaultValue","style","display","alignItems","Object","keys","checked","disabled","size","danger","onClick","paddingBottom","filter","length","fontSize","toLowerCase","dataSource","pagination","Timer","useState","seconds","setSeconds","pause","setPause","start","setStart","changeTime","resetTimer","setTimeout","className","s","timer","timer__currentDanger","timer__current","join","date","Date","getMinutes","slice","getSeconds","formatTime","App","configureStore","Boolean","window","location","hostname","match","ReactDOM","StrictMode","store","document","getElementById","__store__","getState","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a2c9838c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nexport const playersSlice = createSlice({\r\n    name: 'players',\r\n    initialState: {\r\n        players: Array(10).fill(null).map((_, i) => (\r\n            {\r\n                id: i + 1,\r\n                key: i + 1,\r\n                role: null,\r\n                name: '',\r\n                killed: false,\r\n                kicked: false,\r\n                isEditingName: true,\r\n                isEditingRole: true,\r\n                fines: {\r\n                    first: false,\r\n                    second: false,\r\n                    third: false,\r\n                },\r\n                lifeCycle: {\r\n                    '1d': null,\r\n                    '1n': null,\r\n                    '2d': null,\r\n                    '2n': null,\r\n                    '3d': null,\r\n                    '3n': null,\r\n                    '4d': null,\r\n                    '4n': null,\r\n                }\r\n            }\r\n        )),\r\n    },\r\n    reducers: {\r\n        kill: (state, action) => {\r\n            console.log(action)\r\n            state.players = state.players.map(player => {\r\n                return player.id === action.payload.id ? {\r\n                    ...player, \r\n                    killed: !player.killed,\r\n                    lifeCycle: {\r\n                        '1d': null,\r\n                        '1n': null,\r\n                        '2d': null,\r\n                        '2n': null,\r\n                        '3d': null,\r\n                        '3n': null,\r\n                        '4d': null,\r\n                        '4n': null,\r\n                        [action.payload.lifeCycleKey]: player.killed ? null : 'Убили'\r\n                    }\r\n                } : player;\r\n            });\r\n        },\r\n        kick: (state, action) => {\r\n            state.players = state.players.map(player => {\r\n                return player.id === action.payload.id ? {\r\n                    ...player, \r\n                    kicked: !player.kicked,\r\n                    lifeCycle: {\r\n                        '1d': null,\r\n                        '1n': null,\r\n                        '2d': null,\r\n                        '2n': null,\r\n                        '3d': null,\r\n                        '3n': null,\r\n                        '4d': null,\r\n                        '4n': null,\r\n                        [action.payload.lifeCycleKey]: player.kicked ? null : 'За решёткой'\r\n                    }\r\n                } : player;\r\n            });\r\n        },\r\n        editName: (state, action) => {\r\n            state.players = state.players.map(player => {\r\n                return player.id === action.payload ? {...player, isEditingName: !player.isEditingName} : player;\r\n            });\r\n        },\r\n        editRole: (state, action) => {\r\n            state.players = state.players.map(player => {\r\n                return player.id === action.payload ? {...player, isEditingRole: !player.isEditingRole} : player;\r\n            });\r\n        },\r\n        setName: (state, action) => {\r\n            const { id, name } = action.payload;\r\n            state.players = state.players.map(player => {\r\n                return player.id === id ? {...player, name} : player;\r\n            });\r\n        },\r\n        setRole: (state, action) => {\r\n            const { id, role } = action.payload;\r\n            state.players = state.players.map(player => {\r\n                return player.id === id ? {...player, role } : player;\r\n            });\r\n        },\r\n        setFine: (state, action) => {\r\n            const { id, fine } = action.payload;\r\n\r\n            state.players = state.players.map(player => {\r\n                if(player.id === id) {\r\n                    return {...player, fines: {...player.fines, [fine]: !player.fines[fine]}};\r\n                }\r\n                return player;\r\n            });\r\n        }\r\n    },\r\n});\r\n\r\n\r\nexport const selectPlayers = state => state.players.players;\r\n\r\nexport const { kill, kick, editName, setName, setRole, setFine, editRole } = playersSlice.actions;\r\nexport const playersReducer = playersSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const gameSlice = createSlice({\r\n    name: 'game',\r\n    initialState: {\r\n        isPlaying: false,\r\n        gameCycle: [\r\n            {key: '1d', title: '1Д', fullTitle: 'Первый день'}, \r\n            {key: '1n', title: '2Н', fullTitle: 'Первая ночь'}, \r\n            {key: '2d', title: '2Д', fullTitle: 'Второй день'}, \r\n            {key: '2n', title: '2Н', fullTitle: 'Вторая ночь'}, \r\n            {key: '3d', title: '3Д', fullTitle: 'Третий день'}, \r\n            {key: '3n', title: '3Н', fullTitle: 'Третья ночь'}, \r\n            {key: '4d', title: '4Д', fullTitle: 'Четвёртый день'}, \r\n            {key: '4n', title: '4Н', fullTitle: 'Четвёртая ночь'}\r\n        ],\r\n        currentTimeOfDay: null\r\n    },\r\n    reducers: {\r\n        play: (state) => {\r\n            state.isPlaying = true;\r\n            state.currentTimeOfDay = 0;\r\n        },\r\n        setNextTime: (state, action) => {\r\n            if(action.payload === 'return') {\r\n                state.currentTimeOfDay -= 1;\r\n            } else {\r\n                state.currentTimeOfDay += 1;\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\n// selectors\r\nexport const selectIsPlaying = state => state.game.isPlaying;\r\nexport const selectGameCycle = state => state.game.gameCycle;\r\nexport const selectCurrentTimeOfDay = state => state.game.currentTimeOfDay;\r\n\r\nexport const { play, setNextTime } = gameSlice.actions;\r\n\r\nexport const gameReducer = gameSlice.reducer;\r\n","import React from 'react';\r\nimport Icon from '@ant-design/icons';\r\n\r\nconst MafiaSvg = () => (\r\n    <svg height=\"30px\" viewBox=\"-52 0 472 472.048\" width=\"30px\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g fill=\"#eac6bb\"><path d=\"m247.945312 128.046875c8.878907 0 16 7.199219 16 16 0 8.882813-7.121093 16-16 16h-23.921874c-8.871094 0-16-7.117187-16-16 0-8.800781 7.128906-16 16-16zm0 0\"/><path d=\"m152.023438 128.046875c8.808593 0 15.921874 7.199219 15.921874 16 0 8.882813-7.121093 16-15.921874 16h-24c-8.871094 0-16-7.117187-16-16 0-8.800781 7.128906-16 16-16zm0 0\"/><path d=\"m196.023438 216.128906c8.808593 0 15.921874 7.128906 15.921874 16 0 8.808594-7.121093 15.917969-15.921874 15.917969h-24c-8.871094 0-16-7.117187-16-15.917969 0-8.871094 7.128906-16 16-16zm0 0\"/></g><path d=\"m247.945312 160.046875c8.878907 0 16-7.117187 16-16 0-8.800781-7.121093-16-16-16h-23.921874c-8.871094 0-16 7.199219-16 16 0 8.882813 7.128906 16 16 16zm.078126 125.601563v50.480468c0 13.199219-10.800782 24-24 24h-80.078126c-13.203124 0-24-10.800781-24-24v-50.480468c-33.601562-21.28125-55.921874-58.800782-55.921874-101.519532l-.078126-48.082031c0-66.230469 53.757813-128 120-128 66.320313 0 120 53.679687 120 120l.078126 56.082031c0 42.726563-22.398438 80.160156-56 101.519532zm-36.078126-53.519532c0-8.871094-7.121093-16-15.921874-16h-24c-8.871094 0-16 7.128906-16 16 0 8.808594 7.128906 15.917969 16 15.917969h24c8.808593 0 15.921874-7.117187 15.921874-15.917969zm-44-88.082031c0-8.800781-7.121093-16-15.921874-16h-24c-8.871094 0-16 7.199219-16 16 0 8.882813 7.128906 16 16 16h24c8.808593 0 15.921874-7.117187 15.921874-16zm0 0\" fill=\"#656d78\"/><path d=\"m303.945312 128.046875c0-66.320313-53.679687-120-120-120-3.867187 0-7.679687.25-11.457031.664063 60.398438 6.273437 107.433594 57.257812 107.433594 119.335937l.078125 56.082031c0 42.726563-22.398438 72.160156-56 93.511719v58.488281c0 13.199219-10.800781 24-24 24h24.023438c13.199218 0 24-10.800781 24-24v-50.480468c33.601562-21.359376 56-58.800782 56-101.519532zm0 0\" fill=\"#434a54\"/><path d=\"m360.023438 400.128906v55.917969c0 4.488281-3.597657 8-8 8h-56v-127.917969c35.359374 0 64 28.558594 64 64zm0 0\" fill=\"#e6e9ed\"/><path d=\"m272.023438 336.128906h24v127.917969h-24zm0 0\" fill=\"#ed5565\"/><path d=\"m360.023438 400.128906v55.917969c0 4.488281-3.597657 8-8 8h-56v-127.917969c35.359374 0 64 28.558594 64 64zm0 0\" fill=\"#e6e9ed\"/><path d=\"m272.023438 336.128906v127.917969h-176.078126v-127.917969l24-.082031v.082031c0 13.199219 10.796876 24 24 24h80.078126c13.199218 0 24-10.800781 24-24zm0 0\" fill=\"#e6e9ed\"/><path d=\"m296.023438 336.128906h-24.023438c35.359375 0 64 28.558594 64 64v55.917969c0 4.488281-3.601562 8-8 8h24.023438c4.402343 0 8-3.511719 8-8v-55.917969c0-35.441406-28.640626-64-64-64zm0 0\" fill=\"#ccd1d9\"/><path d=\"m296.023438 340.816406v-4.6875h-24c8.496093 0 16.585937 1.6875 24 4.6875zm0 0\" fill=\"#da4453\"/><path d=\"m71.945312 336.128906v127.917969h-55.921874c-4.480469 0-8-3.511719-8-8v-55.917969c0-35.441406 28.5625-63.914062 63.921874-64zm0 0\" fill=\"#e6e9ed\"/><path d=\"m95.945312 336.128906v127.917969h-24v-127.917969zm0 0\" fill=\"#ed5565\"/><path d=\"m8.023438 408.070312c-4.421876 0-8.0000005-3.574218-8.0000005-8 0-39.710937 32.3046875-72.015624 72.0156245-72.015624 4.425782 0 8 3.578124 8 8 0 4.425781-3.574218 8-8 8-30.886718 0-56.015624 25.128906-56.015624 56.015624 0 4.425782-3.574219 8-8 8zm0 0\"/><path d=\"m360.023438 408.0625c-4.421876 0-8-3.574219-8-8 0-30.871094-25.128907-56-56-56-4.421876 0-8-3.574219-8-8 0-4.421875 3.578124-8 8-8 39.703124 0 72 32.296875 72 72 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m72.039062 344.054688c-4.414062 0-8-3.574219-8-8 0-4.414063 3.578126-8 8-8l47.96875-.007813c4.417969 0 8 3.578125 8 8 0 4.417969-3.574218 8-8 8zm0 0\"/><path d=\"m8.03125 464.046875c-4.414062 0-8-3.574219-8-8l-.0078125-55.976563c0-4.414062 3.5781245-8 8.0000005-8 4.417968 0 8 3.578126 8 8l.007812 55.976563c0 4.417969-3.574219 8-8 8zm0 0\"/><path d=\"m16.03125 472.046875c-8.824219 0-16-7.175781-16-16 0-4.421875 3.578125-8 8-8 4.425781 0 8 3.578125 8 8v.015625c4.425781 0 8 3.570312 8 7.992188 0 4.417968-3.574219 7.992187-8 7.992187zm0 0\"/><path d=\"m352.023438 472.046875c-4.421876 0-8-3.574219-8-8 0-4.421875 3.578124-8 8-8h.015624c0-4.421875 3.570313-8 7.992188-8 4.417969 0 7.992188 3.578125 7.992188 8 0 8.824219-7.175782 16-16 16zm0 0\"/><path d=\"m360.023438 464.046875c-4.421876 0-8-3.574219-8-8v-55.984375c0-4.421875 3.578124-8 8-8 4.425781 0 8 3.578125 8 8v55.984375c0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m352.023438 472.046875h-335.992188c-4.421875 0-8-3.574219-8-8 0-4.421875 3.578125-8 8-8h335.992188c4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m136.007812 302.070312c-1.0625 0-2.160156-.207031-3.191406-.671874-46.648437-20.390626-76.792968-66.453126-76.792968-117.34375 0-4.421876 3.578124-8 8-8 4.425781 0 8 3.578124 8 8 0 44.539062 26.375 84.839843 67.191406 102.6875 4.050781 1.769531 5.898437 6.488281 4.128906 10.53125-1.3125 3.007812-4.246094 4.796874-7.335938 4.796874zm0 0\"/><path d=\"m232.023438 302.070312c-3.085938 0-6.023438-1.789062-7.335938-4.796874-1.777344-4.050782.082031-8.769532 4.128906-10.53125 40.824219-17.839844 67.207032-58.140626 67.207032-102.6875 0-4.421876 3.578124-8 8-8 4.425781 0 8 3.578124 8 8 0 50.914062-30.152344 96.96875-76.808594 117.34375-1.039063.464843-2.125.671874-3.191406.671874zm0 0\"/><path d=\"m72.007812 472.046875c-4.421874 0-8-3.574219-8-8v-127.992187c0-4.421876 3.578126-8 8-8 4.425782 0 8 3.578124 8 8v127.992187c0 4.425781-3.574218 8-8 8zm0 0\"/><path d=\"m96.007812 472.046875c-4.421874 0-8-3.574219-8-8v-127.992187c0-4.421876 3.578126-8 8-8 4.425782 0 8 3.578124 8 8v127.992187c0 4.425781-3.574218 8-8 8zm0 0\"/><path d=\"m272.039062 472.046875c-4.421874 0-8-3.574219-8-8v-127.992187c0-4.421876 3.578126-8 8-8 4.425782 0 8 3.578124 8 8v127.992187c0 4.425781-3.574218 8-8 8zm0 0\"/><path d=\"m296.039062 472.046875c-4.421874 0-8-3.574219-8-8v-127.992187c0-4.421876 3.578126-8 8-8 4.425782 0 8 3.578124 8 8v127.992187c0 4.425781-3.574218 8-8 8zm0 0\"/><path d=\"m184.273438 400.0625c-4.425782 0-8.042969-3.574219-8.042969-8 0-4.421875 3.539062-8 7.953125-8h.089844c4.414062 0 8 3.578125 8 8 0 4.425781-3.585938 8-8 8zm0 0\"/><path d=\"m184.273438 440.0625c-4.425782 0-8.042969-3.574219-8.042969-8 0-4.421875 3.539062-8 7.953125-8h.089844c4.414062 0 8 3.578125 8 8 0 4.425781-3.585938 8-8 8zm0 0\"/><path d=\"m64.015625 144.007812c-4.421875 0-8-3.574218-8-8 0-72.457031 59.816406-136.007812 128-136.007812 70.578125 0 128 57.425781 128 128 0 4.425781-3.574219 8-8 8-4.421875 0-8-3.574219-8-8 0-61.761719-50.238281-112-112-112-59.664063 0-112 56.078125-112 120.007812 0 4.425782-3.574219 8-8 8zm0 0\"/><path d=\"m64.023438 192.054688c-4.414063 0-8-3.574219-8-8l-.007813-48.046876c0-4.414062 3.578125-8 8-8 4.417969 0 8 3.578126 8 8l.007813 48.046876c0 4.417968-3.574219 8-8 8zm0 0\"/><path d=\"m304.023438 192.054688c-4.414063 0-8-3.574219-8-8l-.007813-56.054688c0-4.414062 3.578125-8 8-8 4.417969 0 8 3.574219 8 8l.007813 56.054688c0 4.417968-3.574219 8-8 8zm0 0\"/><path d=\"m144.007812 368.0625c-17.648437 0-32-14.351562-32-32 0-4.421875 3.578126-8 8-8 4.425782 0 8 3.578125 8 8 0 8.824219 7.175782 16 16 16 4.425782 0 8 3.578125 8 8 0 4.425781-3.574218 8-8 8zm0 0\"/><path d=\"m224.023438 368.0625c-4.421876 0-8-3.574219-8-8 0-4.421875 3.578124-8 8-8 8.824218 0 16-7.175781 16-16 0-4.421875 3.578124-8 8-8 4.425781 0 8 3.578125 8 8 0 17.648438-14.351563 32-32 32zm0 0\"/><path d=\"m224.023438 368.0625h-80.015626c-4.421874 0-8-3.574219-8-8 0-4.421875 3.578126-8 8-8h80.015626c4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m296.023438 344.0625h-48c-4.421876 0-8-3.574219-8-8 0-4.421875 3.578124-8 8-8h48c4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m120.007812 344.046875c-4.421874 0-8-3.574219-8-8v-50.488281c0-4.421875 3.578126-8 8-8 4.425782 0 8 3.578125 8 8v50.488281c0 4.425781-3.574218 8-8 8zm0 0\"/><path d=\"m248.023438 344.0625c-4.421876 0-8-3.574219-8-8v-50.488281c0-4.421875 3.578124-8 8-8 4.425781 0 8 3.578125 8 8v50.488281c0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m152.015625 344.046875c-4.421875 0-8-3.574219-8-8v-24c0-4.421875 3.578125-8 8-8 4.425781 0 8 3.578125 8 8v24c0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m184.015625 344.046875c-4.421875 0-8-3.574219-8-8v-24c0-4.421875 3.578125-8 8-8 4.425781 0 8 3.578125 8 8v24c0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m216.015625 344.046875c-4.421875 0-8-3.574219-8-8v-24c0-4.421875 3.578125-8 8-8 4.425781 0 8 3.578125 8 8v24c0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m128.03125 168.03125c-13.222656 0-23.992188-10.765625-23.992188-23.992188 0-13.222656 10.769532-23.992187 23.992188-23.992187 4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8-4.40625 0-7.992188 3.585937-7.992188 7.992187 0 4.410157 3.585938 7.992188 7.992188 7.992188 4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m152.023438 168.03125c-4.421876 0-8-3.574219-8-8 0-4.421875 3.578124-8 8-8 4.410156 0 7.992187-3.582031 7.992187-7.992188 0-4.40625-3.582031-7.992187-7.992187-7.992187-4.421876 0-8-3.574219-8-8 0-4.421875 3.578124-8 8-8 13.222656 0 23.992187 10.769531 23.992187 23.992187 0 13.226563-10.769531 23.992188-23.992187 23.992188zm0 0\"/><path d=\"m152.023438 136.046875h-23.992188c-4.421875 0-8-3.574219-8-8 0-4.421875 3.578125-8 8-8h23.992188c4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m152.023438 168.03125h-23.992188c-4.421875 0-8-3.574219-8-8 0-4.421875 3.578125-8 8-8h23.992188c4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m172.03125 256.046875c-13.222656 0-23.992188-10.765625-23.992188-23.992187 0-13.222657 10.769532-23.992188 23.992188-23.992188 4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8-4.40625 0-7.992188 3.585938-7.992188 7.992188 0 4.410156 3.585938 7.992187 7.992188 7.992187 4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m196.023438 256.046875c-4.421876 0-8-3.574219-8-8 0-4.421875 3.578124-8 8-8 4.410156 0 7.992187-3.582031 7.992187-7.992187 0-4.40625-3.582031-7.992188-7.992187-7.992188-4.421876 0-8-3.574219-8-8 0-4.421875 3.578124-8 8-8 13.222656 0 23.992187 10.769531 23.992187 23.992188 0 13.226562-10.769531 23.992187-23.992187 23.992187zm0 0\"/><path d=\"m196.023438 224.0625h-23.992188c-4.421875 0-8-3.574219-8-8 0-4.421875 3.578125-8 8-8h23.992188c4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m196.023438 256.046875h-23.992188c-4.421875 0-8-3.574219-8-8 0-4.421875 3.578125-8 8-8h23.992188c4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m224.023438 168.03125c-13.222657 0-23.992188-10.765625-23.992188-23.992188 0-13.222656 10.769531-23.992187 23.992188-23.992187 4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8-4.40625 0-7.992188 3.585937-7.992188 7.992187 0 4.410157 3.585938 7.992188 7.992188 7.992188 4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m248.015625 168.03125c-4.421875 0-8-3.574219-8-8 0-4.421875 3.578125-8 8-8 4.410156 0 7.992187-3.582031 7.992187-7.992188 0-4.40625-3.582031-7.992187-7.992187-7.992187-4.421875 0-8-3.574219-8-8 0-4.421875 3.578125-8 8-8 13.222656 0 23.992187 10.769531 23.992187 23.992187 0 13.226563-10.769531 23.992188-23.992187 23.992188zm0 0\"/><path d=\"m248.015625 136.046875h-23.992187c-4.421876 0-8-3.574219-8-8 0-4.421875 3.578124-8 8-8h23.992187c4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m248.015625 168.03125h-23.992187c-4.421876 0-8-3.574219-8-8 0-4.421875 3.578124-8 8-8h23.992187c4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/></svg>\r\n);\r\nexport const MafiaIcon = props => <Icon component={MafiaSvg} {...props} />;\r\n\r\n\r\nconst DonSvg = () => (\r\n    <svg height=\"30px\" viewBox=\"-68 0 504 504.024\" width=\"30px\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"m256.011719 431.878906-16-16 32-32-16-16h40c35.359375 0 64 28.640625 64 64v56c0 4.410156-3.589844 8-8 8h-144zm36 23.769532c6.640625 0 12-5.359376 12-12v-20h-24v20c0 6.640624 5.359375 12 12 12zm0 0\" fill=\"#434a54\"/><path d=\"m296.011719 367.878906h-24.015625c35.359375 0 63.984375 28.640625 63.984375 64v56c0 4.410156-3.59375 8-8 8h24.03125c4.410156 0 8-3.589844 8-8v-56c0-35.359375-28.640625-64-64-64zm0 0\" fill=\"#353b44\"/><path d=\"m304.011719 423.648438v20c0 6.640624-5.359375 12-12 12s-12-5.359376-12-12v-20zm0 0\" fill=\"#ed5565\"/><path d=\"m159.140625 431.878906 24.871094 64h-24l-48-64 16-16-32-32 32-32 12.488281 32zm0 0\" fill=\"#656d78\"/><path d=\"m112.011719 431.878906 48 64h-144c-4.40625 0-8-3.589844-8-8v-56c0-35.359375 28.640625-64 64-64h40l-16 16 32 32zm0 0\" fill=\"#434a54\"/><path d=\"m256.011719 367.878906 16 16-32 32 16 16-48 64h-24l24.871093-64 18.640626-48 12.488281-32zm0 0\" fill=\"#656d78\"/><path d=\"m227.523438 383.878906-18.640626 48-16.871093-40 16-18.800781zm0 0\" fill=\"#e6e9ed\"/><path d=\"m208.011719 373.078125-16 18.800781h-16l-16-18.800781 24-13.199219zm0 0\" fill=\"#ed5565\"/><path d=\"m160.011719 373.078125 16 18.800781-16.871094 40-18.640625-48zm0 0\" fill=\"#e6e9ed\"/><path d=\"m192.011719 391.878906 16.871093 40-24.871093 64-24.871094-64 16.871094-40zm0 0\" fill=\"#da4453\"/><path d=\"m240.011719 351.878906-12.488281 32-19.511719-10.800781-24-13.199219-24 13.199219-19.511719 10.800781-12.488281-32v-29.832031c16.71875 8.800781 35.753906 13.832031 56 13.832031 20.230469 0 39.28125-5.039062 56-13.832031zm0 0\" fill=\"#f5f7fa\"/><path d=\"m360.011719 151.886719c0 9.28125-21.511719 17.601562-56 23.359375-31.441407 5.363281-73.609375 8.640625-120 8.640625-46.40625 0-88.558594-3.277344-120-8.640625-34.488281-5.757813-56-14.078125-56-23.359375 0-9.757813 23.839843-18.480469 61.359375-24.320313l-5.359375 24.320313h240l-5.359375-24.320313c37.519531 5.839844 61.359375 14.5625 61.359375 24.320313zm0 0\" fill=\"#656d78\"/><path d=\"m280.011719 223.808594c0-13.28125 10.71875-24 24-24v16.078125c0 45.992187-25.917969 85.992187-64 106.160156-16.71875 8.800781-35.769531 13.832031-56 13.832031-20.246094 0-39.28125-5.039062-56-13.832031-38.078125-20.167969-64-60.167969-64-106.160156v-16.078125c13.28125 0 24 10.71875 24 24 0 39.839844 32.160156 72 72 72l8-8h32l8 8c39.753906-.007813 72-32.160156 72-72zm0 0\" fill=\"#656d78\"/><path d=\"m304.011719 199.808594c-13.28125 0-24 10.71875-24 24 0 39.839844-32.246094 72-72 72l-8-8h-32l-8 8c-39.839844 0-72-32.160156-72-72 0-13.28125-10.71875-24-24-24v-24.5625c31.441406 5.363281 73.59375 8.640625 120 8.640625 46.390625 0 88.558593-3.277344 120-8.640625zm0 0\" fill=\"#eac6bb\"/><path d=\"m292.402344 177.054688c-3.71875.539062-7.589844 1.023437-11.542969 1.503906-.296875.035156-.558594.074218-.855469.113281v37.214844c0 11.761719-1.71875 23.121093-4.871094 33.875 3.09375-8.058594 4.878907-16.785157 4.878907-25.953125 0-13.28125 10.71875-24 24-24v-24.5625c-3.71875.632812-7.589844 1.234375-11.609375 1.808594zm0 0\" fill=\"#d3b1a9\"/><path d=\"m280.011719 223.808594c0 9.167968-1.785157 17.894531-4.886719 25.953125-9.199219 31.277343-30.785156 57.277343-59.128906 72.285156-13.359375 7.03125-28.214844 11.609375-43.984375 13.183594.03125 0 .046875 0 .0625.007812 3.9375.386719 7.90625.640625 11.9375.640625 20.230469 0 39.28125-5.039062 56-13.832031 38.082031-20.167969 64-60.167969 64-106.160156v-16.078125c-13.28125 0-24 10.71875-24 24zm0 0\" fill=\"#434a54\"/><path d=\"m298.570312 127.566406h.082032l5.359375 24.320313h-240l5.359375-24.320313 1.769531-7.679687h225.742187zm0 0\" fill=\"#ed5565\"/><path d=\"m272.011719 7.808594 24.871093 112.078125h-225.742187l24.871094-112.078125c56 0 56 24.078125 88 24.078125s31.921875-24.078125 88-24.078125zm0 0\" fill=\"#656d78\"/><path d=\"m298.652344 127.566406h-.082032l-1.6875-7.679687h-24.015624l1.6875 7.679687h.082031l5.359375 24.320313h24.015625zm0 0\" fill=\"#da4453\"/><path d=\"m272.011719 7.808594c-9.328125 0-16.984375.710937-23.609375 1.824218l24.464844 110.253907h24.015624zm0 0\" fill=\"#434a54\"/><path d=\"m8.011719 440.046875c-4.421875 0-8.0000002-3.574219-8.0000002-8 0-39.710937 32.3046872-72.015625 72.0156252-72.015625 4.425781 0 8 3.578125 8 8 0 4.425781-3.574219 8-8 8-30.886719 0-56.015625 25.128906-56.015625 56.015625 0 4.417969-3.574219 8-8 8zm0 0\"/><path d=\"m360.011719 440.039062c-4.421875 0-8-3.574218-8-8 0-30.871093-25.128907-56-56-56-4.421875 0-8-3.574218-8-8 0-4.421874 3.578125-8 8-8 39.703125 0 72 32.296876 72 72 0 4.417969-3.574219 8-8 8zm0 0\"/><path d=\"m72.027344 376.03125c-4.414063 0-8-3.574219-8-8 0-4.414062 3.578125-8 8-8l39.992187-.007812c4.417969 0 8 3.578124 8 8 0 4.417968-3.574219 8-8 8zm0 0\"/><path d=\"m8.019531 496.023438c-4.414062 0-7.9999998-3.574219-7.9999998-8l-.0078124-55.976563c0-4.414063 3.5781252-8 8.0000002-8 4.417969 0 8 3.578125 8 8l.007812 55.976563c0 4.410156-3.574219 8-8 8zm0 0\"/><path d=\"m16.019531 504.023438c-8.824219 0-15.9999998-7.175782-15.9999998-16 0-4.421876 3.5781248-8 7.9999998-8 4.425781 0 8 3.578124 8 8v.015624c4.425781 0 8 3.570313 8 7.992188 0 4.410156-3.574219 7.992188-8 7.992188zm0 0\"/><path d=\"m352.011719 504.023438c-4.421875 0-8-3.574219-8-8 0-4.421876 3.578125-8 8-8h.015625c0-4.421876 3.570312-8 7.992187-8 4.417969 0 7.992188 3.578124 7.992188 8 0 8.816406-7.175781 16-16 16zm0 0\"/><path d=\"m360.011719 496.023438c-4.421875 0-8-3.574219-8-8v-55.984376c0-4.421874 3.578125-8 8-8 4.425781 0 8 3.578126 8 8v55.984376c0 4.417968-3.574219 8-8 8zm0 0\"/><path d=\"m352.011719 504.023438h-335.992188c-4.421875 0-8-3.574219-8-8 0-4.421876 3.578125-8 8-8h335.992188c4.425781 0 8 3.578124 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m128.011719 360.023438c-4.421875 0-8-3.574219-8-8v-29.832032c0-4.421875 3.578125-8 8-8 4.425781 0 8 3.578125 8 8v29.832032c0 4.417968-3.574219 8-8 8zm0 0\"/><path d=\"m240.011719 360.023438c-4.421875 0-8-3.574219-8-8v-29.832032c0-4.421875 3.578125-8 8-8 4.425781 0 8 3.578125 8 8v29.832032c0 4.417968-3.574219 8-8 8zm0 0\"/><path d=\"m184.011719 344.03125c-70.574219 0-128-57.421875-128-128 0-4.414062 3.578125-8 8-8 4.425781 0 8 3.585938 8 8 0 61.761719 50.242187 112 112 112 61.761719 0 112-50.238281 112-112 0-4.414062 3.578125-8 8-8 4.425781 0 8 3.585938 8 8 0 70.578125-57.421875 128-128 128zm0 0\"/><path d=\"m64.011719 224.03125c-4.421875 0-8-3.582031-8-8v-40.597656c0-4.417969 3.578125-8 8-8 4.425781 0 8 3.582031 8 8v40.597656c0 4.417969-3.574219 8-8 8zm0 0\"/><path d=\"m304.011719 224.03125c-4.421875 0-8-3.582031-8-8v-40.605469c0-4.417969 3.578125-8 8-8 4.425781 0 8 3.582031 8 8v40.605469c0 4.417969-3.574219 8-8 8zm0 0\"/><path d=\"m140.476562 392.039062c-2.824218 0-5.550781-1.496093-7.015624-4.136718-2.136719-3.871094-.730469-8.742188 3.144531-10.871094l43.542969-24.015625c3.878906-2.128906 8.742187-.71875 10.871093 3.144531 2.136719 3.871094.726563 8.742188-3.144531 10.871094l-43.542969 24.015625c-1.222656.671875-2.550781.992187-3.855469.992187zm0 0\"/><path d=\"m227.546875 392.039062c-1.304687 0-2.632813-.320312-3.855469-.992187l-43.542968-24.015625c-3.863282-2.136719-5.273438-7-3.144532-10.871094 2.136719-3.855468 7-5.265625 10.871094-3.144531l43.546875 24.015625c3.863281 2.136719 5.269531 7 3.140625 10.871094-1.453125 2.640625-4.191406 4.136718-7.015625 4.136718zm0 0\"/><path d=\"m96.011719 392.039062c-2.046875 0-4.097657-.78125-5.65625-2.34375-3.128907-3.128906-3.128907-8.183593 0-11.3125l32-32.015624c3.128906-3.128907 8.183593-3.128907 11.3125 0 3.128906 3.128906 3.128906 8.183593 0 11.3125l-32 32.015624c-1.558594 1.5625-3.609375 2.34375-5.65625 2.34375zm0 0\"/><path d=\"m128.011719 424.023438c-2.046875 0-4.097657-.785157-5.65625-2.34375l-32-31.984376c-3.128907-3.128906-3.128907-8.183593 0-11.3125 3.128906-3.125 8.183593-3.125 11.3125 0l32 31.984376c3.128906 3.128906 3.128906 8.183593 0 11.3125-1.558594 1.558593-3.609375 2.34375-5.65625 2.34375zm0 0\"/><path d=\"m112.011719 440.023438c-2.046875 0-4.097657-.785157-5.65625-2.34375-3.128907-3.128907-3.128907-8.183594 0-11.3125l16-16c3.128906-3.128907 8.183593-3.128907 11.3125 0 3.128906 3.128906 3.128906 8.183593 0 11.3125l-16 16c-1.558594 1.558593-3.609375 2.34375-5.65625 2.34375zm0 0\"/><path d=\"m160.019531 504.023438c-2.441406 0-4.832031-1.101563-6.40625-3.199219l-48-64c-2.65625-3.527344-1.9375-8.542969 1.597657-11.191407 3.527343-2.65625 8.535156-1.945312 11.191406 1.597657l48 64c2.65625 3.53125 1.9375 8.546875-1.597656 11.195312-1.433594 1.070313-3.113282 1.597657-4.785157 1.597657zm0 0\"/><path d=\"m184.011719 504.023438c-3.199219 0-6.222657-1.933594-7.457031-5.101563l-56-144c-1.597657-4.121094.441406-8.753906 4.554687-10.355469 4.101563-1.597656 8.75.441406 10.351563 4.554688l56 144c1.597656 4.117187-.441407 8.75-4.554688 10.351562-.949219.375-1.925781.550782-2.894531.550782zm0 0\"/><path d=\"m272.011719 392.039062c-2.046875 0-4.097657-.78125-5.65625-2.34375l-32-32.015624c-3.128907-3.128907-3.128907-8.183594 0-11.3125 3.128906-3.128907 8.183593-3.128907 11.3125 0l32 32.015624c3.128906 3.128907 3.128906 8.183594 0 11.3125-1.558594 1.5625-3.609375 2.34375-5.65625 2.34375zm0 0\"/><path d=\"m240.011719 424.023438c-2.046875 0-4.097657-.785157-5.65625-2.34375-3.128907-3.128907-3.128907-8.183594 0-11.3125l32-31.984376c3.128906-3.125 8.183593-3.125 11.3125 0 3.128906 3.128907 3.128906 8.183594 0 11.3125l-32 31.984376c-1.558594 1.558593-3.609375 2.34375-5.65625 2.34375zm0 0\"/><path d=\"m256.011719 440.023438c-2.046875 0-4.097657-.785157-5.65625-2.34375l-16-16c-3.128907-3.128907-3.128907-8.183594 0-11.3125 3.128906-3.128907 8.183593-3.128907 11.3125 0l16 16c3.128906 3.128906 3.128906 8.183593 0 11.3125-1.558594 1.558593-3.609375 2.34375-5.65625 2.34375zm0 0\"/><path d=\"m208.003906 504.023438c-1.671875 0-3.351562-.519532-4.792968-1.597657-3.535157-2.648437-4.253907-7.664062-1.597657-11.195312l48-64c2.65625-3.535157 7.664063-4.246094 11.191407-1.597657 3.535156 2.648438 4.253906 7.664063 1.597656 11.191407l-48 64c-1.558594 2.097656-3.957032 3.199219-6.398438 3.199219zm0 0\"/><path d=\"m184.011719 504.023438c-.96875 0-1.945313-.167969-2.894531-.542969-4.121094-1.601563-6.160157-6.234375-4.554688-10.351563l56-144c1.59375-4.128906 6.242188-6.167968 10.351562-4.554687 4.121094 1.601562 6.160157 6.234375 4.554688 10.355469l-56 144c-1.234375 3.148437-4.257812 5.09375-7.457031 5.09375zm0 0\"/><path d=\"m296.011719 376.039062h-40c-4.421875 0-8-3.574218-8-8 0-4.421874 3.578125-8 8-8h40c4.425781 0 8 3.578126 8 8 0 4.425782-3.574219 8-8 8zm0 0\"/><path d=\"m159.125 440.023438c-1.039062 0-2.097656-.199219-3.113281-.632813-4.070313-1.71875-5.976563-6.414063-4.253907-10.480469l16.886719-39.980468c1.71875-4.074219 6.414063-5.976563 10.480469-4.257813 4.070312 1.71875 5.976562 6.417969 4.253906 10.480469l-16.886718 39.984375c-1.296876 3.046875-4.257813 4.886719-7.367188 4.886719zm0 0\"/><path d=\"m208.898438 440.023438c-3.117188 0-6.078126-1.832032-7.367188-4.886719l-16.886719-40c-1.71875-4.074219.183594-8.761719 4.253907-10.480469 4.066406-1.71875 8.761718.175781 10.480468 4.253906l16.890625 40c1.71875 4.074219-.183593 8.761719-4.257812 10.480469-1.015625.425781-2.070313.632813-3.113281.632813zm0 0\"/><path d=\"m192.011719 400.039062h-16c-4.421875 0-8-3.574218-8-8 0-4.421874 3.578125-8 8-8h16c4.425781 0 8 3.578126 8 8 0 4.425782-3.574219 8-8 8zm0 0\"/><path d=\"m192.011719 400.039062c-1.832031 0-3.679688-.625-5.183594-1.910156-3.367187-2.855468-3.769531-7.914062-.894531-11.273437l16-18.785157c2.855468-3.367187 7.910156-3.773437 11.269531-.894531 3.367187 2.855469 3.769531 7.914063.898437 11.273438l-16 18.78125c-1.585937 1.847656-3.832031 2.808593-6.089843 2.808593zm0 0\"/><path d=\"m176.011719 400.039062c-2.253907 0-4.503907-.949218-6.085938-2.816406l-16-18.78125c-2.867187-3.363281-2.472656-8.417968.894531-11.273437 3.367188-2.871094 8.414063-2.472657 11.273438.894531l16 18.785156c2.863281 3.359375 2.46875 8.417969-.898438 11.273438-1.503906 1.285156-3.351562 1.917968-5.183593 1.917968zm0 0\"/><path d=\"m208.011719 303.976562c-2.046875 0-4.097657-.785156-5.65625-2.34375l-5.65625-5.65625h-25.375l-5.65625 5.65625c-3.128907 3.128907-8.183594 3.128907-11.3125 0-3.128907-3.128906-3.128907-8.183593 0-11.3125l8-8c1.503906-1.503906 3.527343-2.34375 5.65625-2.34375h32c2.128906 0 4.160156.839844 5.65625 2.34375l8 8c3.128906 3.128907 3.128906 8.183594 0 11.3125-1.558594 1.558594-3.609375 2.34375-5.65625 2.34375zm0 0\"/><path d=\"m160.011719 303.976562c-44.113281 0-80-35.886718-80-80 0-4.417968 3.578125-8 8-8 4.425781 0 8 3.582032 8 8 0 35.289063 28.710937 64 64 64 4.425781 0 8 3.574219 8 8 0 4.421876-3.574219 8-8 8zm0 0\"/><path d=\"m88.011719 231.976562c-4.421875 0-8-3.585937-8-8 0-8.824218-7.175781-16-16-16-4.421875 0-8-3.585937-8-8 0-4.417968 3.578125-8 8-8 17.648437 0 32 14.351563 32 32 0 4.414063-3.574219 8-8 8zm0 0\"/><path d=\"m208.011719 303.976562c-4.421875 0-8-3.578124-8-8 0-4.425781 3.578125-8 8-8 35.289062 0 64-28.710937 64-64 0-4.417968 3.578125-8 8-8 4.425781 0 8 3.582032 8 8 0 44.101563-35.886719 80-80 80zm0 0\"/><path d=\"m280.011719 231.976562c-4.421875 0-8-3.585937-8-8 0-17.648437 14.351562-32 32-32 4.425781 0 8 3.582032 8 8 0 4.414063-3.574219 8-8 8-8.824219 0-16 7.175782-16 16 0 4.414063-3.574219 8-8 8zm0 0\"/><path d=\"m184.011719 192.023438c-7.511719 0-184.0000002-.457032-184.0000002-40 0-9.246094 7.0625002-22.65625 68.1679692-32.183594 4.457031-.679688 8.464843 2.3125 9.144531 6.664062.679687 4.367188-2.304688 8.457032-6.671875 9.144532-38.328125 5.984374-51.632813 13.351562-54.320313 16.40625 6.945313 8.953124 66.414063 23.96875 167.6875 23.96875 101.273438 0 160.746094-15.015626 167.6875-23.96875-2.6875-3.054688-15.992187-10.429688-54.328125-16.414063-4.367187-.679687-7.351562-4.769531-6.671875-9.136719.679688-4.359375 4.714844-7.351562 9.144531-6.664062 61.089844 9.535156 68.160157 22.929687 68.160157 32.183594 0 39.542968-176.488281 40-184 40zm0 0\"/><path d=\"m64.019531 160.023438c-.574219 0-1.160156-.0625-1.742187-.191407-4.3125-.960937-7.035156-5.230469-6.082032-9.542969l32.03125-144.023437c.96875-4.3125 5.265626-7.007813 9.546876-6.074219 4.3125.960938 7.03125 5.234375 6.078124 9.542969l-32.03125 144.027344c-.832031 3.726562-4.136718 6.261719-7.800781 6.261719zm0 0\"/><path d=\"m304.003906 160.023438c-3.664062 0-6.96875-2.535157-7.808594-6.261719l-32.023437-144.027344c-.953125-4.308594 1.769531-8.589844 6.082031-9.542969 4.308594-.945312 8.574219 1.761719 9.542969 6.074219l32.03125 144.023437c.953125 4.3125-1.769531 8.589844-6.082031 9.542969-.582032.128907-1.167969.191407-1.742188.191407zm0 0\"/><path d=\"m184.011719 40.007812c-15.886719 0-25.351563-5.367187-34.503907-10.558593-11.113281-6.304688-23.703124-13.449219-53.464843-13.449219-4.421875 0-8-3.585938-8-8s3.578125-8 8-8c33.984375 0 49.167969 8.617188 61.359375 15.527344 8.671875 4.929687 14.945312 8.480468 26.609375 8.480468 11.664062 0 17.921875-3.550781 26.578125-8.472656 12.191406-6.917968 27.367187-15.535156 61.390625-15.535156 4.421875 0 8 3.585938 8 8s-3.578125 8-8 8c-29.800781 0-42.382813 7.152344-53.488281 13.457031-9.144532 5.183594-18.59375 10.550781-34.480469 10.550781zm0 0\"/><path d=\"m304.011719 160.023438h-240c-4.421875 0-8-3.582032-8-8 0-4.414063 3.578125-8 8-8h240c4.425781 0 8 3.585937 8 8 0 4.417968-3.574219 8-8 8zm0 0\"/><path d=\"m296.890625 128.023438h-225.757813c-4.425781 0-8-3.582032-8-8 0-4.414063 3.574219-8 8-8h225.757813c4.425781 0 8 3.585937 8 8 0 4.417968-3.574219 8-8 8zm0 0\"/><path d=\"m292.011719 463.839844c-11.03125 0-20-8.96875-20-20 0-4.425782 3.578125-8 8-8 4.425781 0 8 3.574218 8 8 0 2.199218 1.800781 4 4 4s4-1.800782 4-4c0-4.425782 3.578125-8 8-8 4.425781 0 8 3.574218 8 8 0 11.03125-8.96875 20-20 20zm0 0\"/><path d=\"m292.011719 480.015625c-4.421875 0-8-3.574219-8-8v-16.167969c0-4.421875 3.578125-8 8-8 4.425781 0 8 3.578125 8 8v16.167969c0 4.417969-3.574219 8-8 8zm0 0\"/><path d=\"m280.011719 451.839844c-4.421875 0-8-3.574219-8-8v-20c0-4.425782 3.578125-8 8-8 4.425781 0 8 3.574218 8 8v20c0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m304.011719 431.839844h-24c-4.421875 0-8-3.574219-8-8 0-4.425782 3.578125-8 8-8h24c4.425781 0 8 3.574218 8 8 0 4.425781-3.574219 8-8 8zm0 0\"/><path d=\"m304.011719 451.839844c-4.421875 0-8-3.574219-8-8v-20c0-4.425782 3.578125-8 8-8 4.425781 0 8 3.574218 8 8v20c0 4.425781-3.574219 8-8 8zm0 0\"/></svg>\r\n)\r\nexport const DonIcon = props => <Icon component={DonSvg} {...props} />;\r\n\r\n\r\nconst ManSvg = () => (\r\n    <svg height=\"30px\" viewBox=\"0 0 480.05 480.05\" width=\"30px\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"m394.025 424.79v39.26c0 4.42-3.58 8-8 8h-292c-4.42 0-8-3.58-8-8v-39.26c0-41.19 33.39-74.56 74.59-74.57 14.56-.01 27.38-7.5 34.76-18.86 7.414-11.394 6.65-21.302 6.65-29.31l.15-.37c-35.9-14.86-61.15-50.23-61.15-91.5v-3.13c-14.255 0-25-11.265-25-24.54v-41.56c-.32-14.47.34-65.5 37.2-101.03 42.86-41.31 110.78-37.93 159.98-15.83 1.6.72 1.55 3.01-.07 3.68l-12.83 5.28c-1.92.79-1.51 3.62.55 3.84l6.23.67c33.52 3.58 61.41 23.59 75.32 47.3.13.23.09.53-.1.73-11.08 11.3-17.28 26.51-17.28 42.35v53.12c0 14.33-11.61 25.99-26 25.99v3.13c0 41.27-25.25 76.64-61.15 91.5l.15.37c0 7.781-.826 17.821 6.65 29.31 7.38 11.36 20.2 18.85 34.76 18.86 41.2.01 74.59 33.38 74.59 74.57z\" fill=\"#ffd6a6\"/><path d=\"m382.401 84.859c.133.227.093.531-.101.729-11.073 11.304-17.275 26.516-17.275 42.352v53.12c0 14.329-11.607 25.99-26 25.99 0-30.261.017-46.074.011-54.575-.004-5.367-5.189-9.224-10.318-7.646-16.122 4.96-34.928 7.516-54.692 3.221-34.78-7.56-44.63-21.19-73-28-31.7-7.6-60.45 16.68-60.25 47.74.06 10.21.23 22.97.25 39.26-14.255 0-25-11.265-25-24.54v-41.56c-.32-14.47.34-65.5 37.2-101.03 42.856-41.311 110.783-37.929 159.975-15.827 1.601.719 1.558 3.01-.065 3.678l-12.831 5.282c-1.918.79-1.514 3.617.548 3.838l6.232.669c33.523 3.584 61.411 23.587 75.316 47.299z\" fill=\"#42434d\"/><path d=\"m328.717 144.829c5.129-1.578 10.314 2.275 10.318 7.641.007 8.795-.011 25.41-.011 57.71 0 41.27-25.25 76.64-61.15 91.5-64.917 26.947-136.85-20.924-136.85-91.5 0-18.251-.184-31.218-.25-42.39-.2-31.06 28.55-55.34 60.25-47.74 28.37 6.81 38.22 20.44 73 28 19.765 4.295 38.572 1.739 54.693-3.221z\" fill=\"#ffdfba\"/><path d=\"m394.025 424.79v39.26c0 4.418-3.582 8-8 8h-292c-4.418 0-8-3.582-8-8v-39.26c0-41.19 33.395-74.555 74.585-74.57 14.564-.005 27.387-7.504 34.765-18.86 25.754 22.002 63.531 22.015 89.3 0 7.377 11.356 20.201 18.855 34.765 18.86 41.19.015 74.585 33.38 74.585 74.57z\" fill=\"#42434d\"/><path d=\"m200.907 374.377c-3.698 1.163-7.664 1.804-11.916 1.841-41.296.364-74.966 33.017-74.966 74.315v7.517c0 7.732-6.268 14-14 14h-6c-4.418 0-8-3.582-8-8v-39.26c0-41.191 33.395-74.555 74.585-74.57 14.564-.005 27.387-7.504 34.765-18.86 2.974 2.54 6.158 4.823 9.512 6.822 14.753 8.791 12.402 31.044-3.98 36.195z\" fill=\"#4d4e59\"/><path d=\"m279.143 374.377c3.698 1.163 7.664 1.804 11.916 1.841 41.296.364 74.966 33.017 74.966 74.315v7.517c0 7.732 6.268 14 14 14h6c4.418 0 8-3.582 8-8v-39.26c0-41.191-33.395-74.555-74.585-74.57-14.564-.005-27.387-7.504-34.765-18.86-2.974 2.54-6.158 4.823-9.512 6.822-14.752 8.791-12.401 31.044 3.98 36.195z\" fill=\"#2c2c33\"/><path d=\"m279.155 318.47c-24.637 10.313-51.712 11.113-78.26 0 1.356-5.626 1.13-9.27 1.13-16.42l.15-.37c24.082 9.996 51.571 10.016 75.7 0l.15.37c0 7.153-.225 10.796 1.13 16.42z\" fill=\"#f7c388\"/><path d=\"m313.135 27.77c-9.428 3.877-11.515 5.243-15.845 4.53-79.347-13.062-141.827 28.426-150.375 109.499-.15 1.423-.515 2.82-1.146 4.104-6.085 12.388-5.003 21.556-4.874 36.798.135 16.035-24.029 17.062-24.839 1.047-.051-1-.031 1.636-.031-42.798-.32-14.47.34-65.5 37.2-101.03 42.86-41.31 110.78-37.93 159.98-15.83 1.6.72 1.55 3.01-.07 3.68z\" fill=\"#4d4e59\"/><path d=\"m217.622 274.119c16.271 10.175 3.43 35.144-14.38 27.997-36.577-14.679-62.216-50.34-62.216-91.935 0-18.273-.184-31.174-.25-42.39-.063-10.041 2.896-19.372 8.002-27.146 6.418-9.771 21.913-5.513 21.998 7.146.066 11.254.25 24.098.25 42.39-.001 36.497 19.187 66.797 46.596 83.938z\" fill=\"#ffebd2\"/><path d=\"m402.025 424.793v47.257c0 4.418-3.582 8-8 8s-8-3.582-8-8v-47.257c0-36.795-29.775-66.571-66.573-66.571-17.411 0-33.209-8.87-42.258-23.729-2.299-3.773-1.103-8.695 2.671-10.993 3.771-2.301 8.694-1.104 10.993 2.671 6.122 10.051 16.812 16.051 28.594 16.051 45.638-.002 82.573 36.93 82.573 82.571zm-149.125-86.306c-16.747 3.65-33.745-.054-47.23-9.313 2.313-5.118 3.734-10.625 4.185-16.331 68.573 20.185 137.17-31.57 137.17-102.663 0-67.85.083-66.77-.192-69.552-1.053-11.027-16.986-9.527-15.923 1.569.179 1.814.115 3.401.115 67.982 0 50.178-40.822 91-91 91s-91-40.822-91-91c0-18.022-.192-31.978-.255-42.443-.162-26.255 24.117-46.205 50.39-39.907 37.054 8.885 51.988 31.997 99.482 29.785 4.413-.207 7.823-3.952 7.616-8.366-.207-4.413-3.929-7.8-8.366-7.616-42.816 2.013-54.684-19.692-95.001-29.361-36.452-8.744-70.344 18.99-70.121 55.564.054 8.506.166 17.822.222 29.296-5.326-2.777-8.968-8.285-8.968-14.621 0-.183.001-41.554-.002-41.736-.401-18.133 2.182-63.696 34.754-95.094 36.391-35.078 93.328-35.091 137.598-19.66l-6.395 2.632c-7.635 3.141-6.039 14.47 2.193 15.352l14.062 1.506c27.064 2.898 50.998 17.011 66.332 38.941-10.064 12.229-15.542 27.451-15.542 43.488v54.57c0 4.418 3.582 8 8 8s8-3.582 8-8v-54.57c0-13.903 5.369-27.007 15.118-36.896 2.714-2.75 3.047-7.188 1.154-10.243-15.95-25.579-39.684-42.049-66.771-48.655 4.382-3.738 3.52-10.683-1.552-13.248-23.257-11.747-56.433-19.993-88.005-18.778-79.872 3.096-126.627 62.746-124.942 140.92v41.472c0 15.305 10.708 28.167 25.081 31.621 1.491 40.861 25.999 75.947 60.919 92.644v2.105c0 18.444-14.945 33.342-33.427 33.342-45.733 0-82.573 37.021-82.573 82.571v47.257c0 4.418 3.582 8 8 8s8-3.582 8-8v-47.257c0-36.793 29.775-66.571 66.573-66.571 13.623 0 26.596-5.46 36.192-15.744 17.055 11.641 38.469 16.229 59.516 11.642 4.317-.94 7.054-5.203 6.113-9.52-.941-4.318-5.206-7.058-9.52-6.114zm68.125 100.563h-24c-4.418 0-8 3.582-8 8s3.582 8 8 8h24c4.418 0 8-3.582 8-8s-3.582-8-8-8z\"/></svg>\r\n)\r\nexport const ManIcon = props => <Icon component={ManSvg} {...props} />;\r\n\r\n\r\nconst SheriffSvg = () => (\r\n    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" height=\"30px\" width=\"30px\">\r\n        <path fill=\"#FFE7CF\" d=\"M287.46,370.667l48.031-45.113l-19.069-3.542c-9.204-1.85-15.826-12.527-15.826-21.915v-41.836 h-44.597l0,0h-44.597v41.836c0,9.388-6.622,20.065-15.826,21.915l-19.069,3.542l48.031,45.113 C242.223,387.278,269.775,387.278,287.46,370.667z\"/>\r\n        <path fill=\"#F4D3A6\" d=\"M259.666,258.262v59.427c0,9.388,6.622,20.065,15.826,21.915l37.614,6.976l22.385-21.025 l-19.069-3.542c-9.204-1.85-15.826-12.527-15.826-21.915v-41.836L259.666,258.262L259.666,258.262z\"/>\r\n        <path fill=\"#EDEDED\" d=\"M249.97,466.718L249.97,466.718L249.97,466.718z\"/>\r\n        <path fill=\"#2D5872\" d=\"M388.124,329.489l-67.799-12.594c-2.488-0.462-5.056,0.137-7.083,1.652l-57.243,42.785\r\n        l-57.242-42.785c-2.027-1.515-4.595-2.114-7.083-1.652l-67.799,12.594c-34.105,10.042-57.522,41.347-57.522,76.9v81.265\r\n        c0,9.302,7.541,16.843,16.843,16.843h345.609c9.302,0,16.843-7.541,16.843-16.843V406.39\r\n        C445.646,370.837,422.229,339.531,388.124,329.489z\"/>\r\n        <g>\r\n            <path fill=\"#1D4559\" d=\"M388.124,329.489l-67.799-12.594c-2.488-0.462-5.056,0.137-7.083,1.652l-30.062,22.469\r\n            l64.521,11.985c34.105,10.042,57.522,19.462,57.522,55.015v96.481h23.581c9.302,0,16.843-7.541,16.843-16.843V406.39\r\n            C445.646,370.837,422.229,339.531,388.124,329.489z\"/>\r\n            <path fill=\"#1D4559\" d=\"M172.219,320.509l37.105,51.923c2.796,3.912,7.933,5.357,12.358,3.478l34.317-14.578l-57.242-42.785\r\n            c-2.027-1.515-4.595-2.114-7.083-1.652L172.219,320.509z\"/>\r\n            <path fill=\"#1D4559\" d=\"M339.779,320.509l-37.105,51.923c-2.796,3.912-7.933,5.357-12.358,3.478l-34.317-14.578\r\n            l57.242-42.785c2.027-1.515,4.595-2.114,7.083-1.652L339.779,320.509z\"/>\r\n        </g>\r\n        <path fill=\"#2D5872\" d=\"M255.999,7.502c-71.938,0-130.255,49.767-130.255,77.889s58.317,48.218,130.255,48.218\r\n            s130.255-20.096,130.255-48.218C386.254,57.27,327.937,7.502,255.999,7.502z\"/>\r\n        <path fill=\"#1D4559\" d=\"M255.999,7.502c-6.99,0-13.85,0.475-20.542,1.35c62.177,8.123,109.714,51.15,109.714,76.54\r\n            s-47.537,44.234-109.714,47.658c6.692,0.368,13.552,0.56,20.542,0.56c71.938,0,130.255-20.096,130.255-48.218\r\n            S327.937,7.502,255.999,7.502z\"/>\r\n        <path fill=\"#FFE7CF\" d=\"M349.137,163.902h-5.945v-6.981v-16.687c0-23.561-9.673-46.392-27.527-61.765\r\n            c-13.998-12.053-105.334-12.053-119.332,0c-17.854,15.373-27.527,38.204-27.527,61.765v16.687v6.981h-5.945\r\n            c-8.715,0-15.781,7.065-15.781,15.781v17.488c0,8.715,7.065,15.781,15.781,15.781h5.968c0.492,22.903,10.116,44.947,27.503,59.918\r\n            c13.998,12.053,33.674,22.573,59.666,22.863c25.992-0.29,45.668-10.81,59.666-22.863c17.387-14.971,27.011-37.015,27.503-59.918\r\n            h5.968c8.715,0,15.781-7.065,15.781-15.781v-17.488C364.917,170.967,357.852,163.902,349.137,163.902z\"/>\r\n        <path fill=\"#F4D3A6\" d=\"M349.137,163.902h-5.945v-6.981v-16.687c0-23.561-9.673-46.392-27.527-61.765\r\n            c-8.812-7.588-48.275-10.397-79.797-8.431c18.548,1.157,34.349,3.966,39.534,8.431c17.854,15.373,27.527,38.204,27.527,61.765\r\n            v16.687l-0.024,56.03c-0.492,22.903-10.116,44.947-27.503,59.918c-10.126,8.719-23.225,16.633-39.534,20.455\r\n            c6.237,1.462,12.941,2.328,20.131,2.408c25.992-0.29,45.668-10.81,59.666-22.863c17.387-14.971,27.011-37.015,27.503-59.918h5.968\r\n            c8.715,0,15.781-7.065,15.781-15.781v-17.488C364.917,170.967,357.852,163.902,349.137,163.902z\"/>\r\n        <path fill=\"#FF6D3A\" d=\"M155.585,111.346v54.333c0,0,13.337-0.302,21.908,8.18c1.785,1.766,4.818,0.476,4.818-2.035v-40.237\r\n            h147.377v40.237c0,2.511,3.033,3.802,4.818,2.035c8.57-8.482,21.908-8.18,21.908-8.18v-54.333\r\n            C356.413,77.694,155.585,77.694,155.585,111.346z\"/>\r\n        <path fill=\"#2D5872\" d=\"M255.999,155.61c-55.457,0-100.414-17.213-100.414-38.447h200.829\r\n            C356.413,138.397,311.456,155.61,255.999,155.61z\"/>\r\n        <path fill=\"#1D4559\" d=\"M155.585,90.473v26.691h200.829V90.752c0-7.164-4.854-13.41-11.795-15.184\r\n            c-18.583-4.748-56.375-13.059-93.32-13.074c-34.048-0.014-67.375,8.14-84.281,12.891C160.255,77.286,155.585,83.447,155.585,90.473z\r\n            \"/>\r\n        <g>\r\n            <polygon fill=\"#282C3A\" points=\"255.999,361.332 229.014,372.795 244.789,391.134 267.209,391.134 282.985,372.795 \t\"/>\r\n            <polygon fill=\"#282C3A\" points=\"267.209,391.134 255.999,391.134 244.789,391.134 229.014,504.498 282.985,504.498 \t\"/>\r\n        </g>\r\n        <g>\r\n            <path fill=\"#1D4559\" d=\"M358.407,466.718h-39.509c-2.625,0-4.753-2.128-4.753-4.753v-21.049\r\n                c0-2.625,2.128-4.753,4.753-4.753h39.509c2.625,0,4.753,2.128,4.753,4.753v21.049C363.16,464.59,361.032,466.718,358.407,466.718z\"\r\n                />\r\n            <path fill=\"#1D4559\" d=\"M193.102,466.718h-39.509c-2.625,0-4.753-2.128-4.753-4.753v-21.049\r\n                c0-2.625,2.128-4.753,4.753-4.753h39.509c2.625,0,4.753,2.128,4.753,4.753v21.049C197.854,464.59,195.727,466.718,193.102,466.718z\r\n                \"/>\r\n        </g>\r\n        <path fill=\"#FFBF14\" d=\"M81.599,379.165c7.409,5.973,18.257,4.81,24.231-2.599l8.164-10.126\r\n            c5.973-7.409,4.81-18.257-2.599-24.231l-5.854-4.72c-14.012,8.332-25.064,20.714-31.811,35.331L81.599,379.165z\"/>\r\n        <path fill=\"#EAA200\" d=\"M438.268,372.82c-6.747-14.617-17.799-26.999-31.811-35.331l-5.854,4.72\r\n            c-7.409,5.974-8.572,16.822-2.599,24.231l8.164,10.126c5.973,7.409,16.822,8.572,24.231,2.599L438.268,372.82z\"/>\r\n        <path d=\"M440.5,361.043c-0.059-0.097-0.117-0.195-0.176-0.293c-0.43-0.703-0.871-1.4-1.322-2.092\r\n            c-0.248-0.382-0.498-0.763-0.752-1.141c-0.309-0.459-0.621-0.916-0.94-1.37c-0.411-0.589-0.83-1.171-1.255-1.749\r\n            c-0.127-0.172-0.245-0.348-0.372-0.519c-0.091-0.121-0.187-0.236-0.278-0.357c-0.512-0.679-1.035-1.348-1.566-2.01\r\n            c-0.186-0.232-0.37-0.465-0.557-0.694c-0.529-0.646-1.07-1.282-1.617-1.912c-0.228-0.263-0.453-0.528-0.683-0.788\r\n            c-0.456-0.514-0.924-1.017-1.392-1.519c-0.349-0.376-0.695-0.754-1.05-1.123c-0.266-0.276-0.541-0.544-0.811-0.816\r\n            c-10.356-10.482-23.117-18.137-37.485-22.367c-0.246-0.073-0.496-0.133-0.749-0.18l-67.8-12.595c-0.003,0,0.003,0,0,0l0,0\r\n            c-0.12-0.022-0.24-0.028-0.36-0.047c-3.172-0.516-6.413-0.091-9.322,1.183c-2.36-2.898-3.915-6.879-3.915-10.557v-12.274\r\n            c4.285-2.736,8.446-5.811,12.462-9.269c16.801-14.466,27.382-35.347,29.665-58.126c12.336-0.57,22.195-10.784,22.195-23.258v-17.488\r\n            c0-7.072-3.169-13.616-8.504-17.984v-40.202c24.514-12.081,29.841-26.166,29.841-36.104c0-17.052-15.882-38.396-41.448-55.704\r\n            C335.93,18.601,301.639,0,255.999,0s-79.931,18.601-96.31,29.688c-25.566,17.307-41.448,38.651-41.448,55.704\r\n            c0,9.938,5.327,24.023,29.841,36.104v40.202c-5.334,4.368-8.504,10.912-8.504,17.984v17.488c0,12.474,9.859,22.688,22.195,23.258\r\n            c2.282,22.779,12.864,43.661,29.665,58.126c4.016,3.458,8.177,6.533,12.462,9.269v12.274c0,3.678-1.555,7.658-3.915,10.556\r\n            c-3.019-1.323-6.397-1.747-9.682-1.135h0.002c-0.002,0,0,0-0.002,0l-67.799,12.595c-0.253,0.047-0.503,0.107-0.749,0.18\r\n            c-14.361,4.228-27.116,11.877-37.47,22.351c-0.277,0.279-0.557,0.554-0.83,0.836c-0.35,0.363-0.691,0.737-1.035,1.107\r\n            c-0.473,0.508-0.945,1.016-1.407,1.535c-0.227,0.256-0.449,0.518-0.674,0.777c-0.55,0.633-1.093,1.272-1.624,1.921\r\n            c-0.187,0.228-0.369,0.46-0.554,0.69c-0.532,0.664-1.056,1.333-1.568,2.012c-0.091,0.121-0.187,0.235-0.278,0.357\r\n            c-0.128,0.171-0.246,0.347-0.372,0.519c-0.425,0.578-0.844,1.16-1.255,1.749c-0.319,0.455-0.632,0.913-0.941,1.372\r\n            c-0.253,0.377-0.502,0.756-0.749,1.137c-0.451,0.693-0.893,1.391-1.324,2.094c-0.059,0.097-0.118,0.195-0.176,0.292\r\n            c-8.289,13.659-12.648,29.169-12.648,45.346v9.144c0,4.144,3.359,7.502,7.502,7.502c4.143,0,7.502-3.359,7.502-7.502v-9.144\r\n            c0-7.312,1.084-14.457,3.172-21.283c4.415,3.511,9.773,5.381,15.342,5.381c0.89,0,1.787-0.048,2.684-0.145\r\n            c6.569-0.704,12.471-3.925,16.618-9.068l8.164-10.125c4.147-5.143,6.043-11.594,5.339-18.163c-0.56-5.22-2.714-10.016-6.154-13.848\r\n            c2.156-0.877,4.358-1.668,6.615-2.345l43.261-8.036l34.328,48.037c3.436,4.806,8.816,7.456,14.396,7.456\r\n            c2.341,0,4.717-0.466,6.999-1.435l2.285-0.971l9.99,11.614l-14.409,103.538H128.21v-60.833c0-4.144-3.359-7.502-7.502-7.502\r\n            s-7.502,3.358-7.502,7.502v60.833h-30.01c-5.151,0-9.34-4.19-9.34-9.34v-37.214c0-4.144-3.359-7.502-7.502-7.502\r\n            s-7.502,3.359-7.502,7.502v37.214c0,13.423,10.921,24.345,24.345,24.345l0,0h345.608l0,0c13.424,0,24.345-10.922,24.345-24.345\r\n            V406.39C453.148,390.212,448.789,374.702,440.5,361.043z M108.153,361.732l-8.164,10.126c-1.631,2.023-3.952,3.289-6.536,3.567\r\n            c-2.58,0.276-5.121-0.468-7.144-2.1l-3.131-2.524c0.672-1.198,1.376-2.374,2.11-3.527c0.008-0.013,0.018-0.026,0.026-0.04\r\n            c0.63-0.988,1.293-1.95,1.968-2.903c0.205-0.288,0.409-0.576,0.618-0.862c0.602-0.824,1.221-1.633,1.856-2.429\r\n            c0.164-0.206,0.325-0.415,0.491-0.619c0.717-0.879,1.457-1.737,2.214-2.58c0.221-0.247,0.446-0.489,0.67-0.732\r\n            c0.75-0.813,1.512-1.614,2.299-2.391c0.067-0.067,0.133-0.136,0.201-0.203c2.901-2.845,6.046-5.451,9.413-7.789l1.644,1.326\r\n            c2.023,1.631,3.29,3.952,3.567,6.536C110.53,357.171,109.785,359.707,108.153,361.732z M405.312,348.05l1.644-1.326\r\n            c3.368,2.338,6.512,4.944,9.413,7.789c0.068,0.067,0.133,0.136,0.201,0.203c0.787,0.778,1.549,1.579,2.299,2.391\r\n            c0.224,0.243,0.449,0.485,0.67,0.732c0.757,0.843,1.497,1.702,2.214,2.58c0.166,0.204,0.327,0.413,0.491,0.619\r\n            c0.635,0.796,1.254,1.606,1.856,2.429c0.209,0.285,0.414,0.574,0.618,0.862c0.675,0.953,1.338,1.916,1.968,2.903\r\n            c0.009,0.013,0.018,0.026,0.026,0.04c0.735,1.153,1.439,2.329,2.11,3.527l-3.131,2.524c-2.024,1.631-4.563,2.375-7.144,2.1\r\n            c-2.584-0.277-4.905-1.544-6.537-3.568l-8.164-10.125C400.477,357.554,401.136,351.418,405.312,348.05z M317.732,324.556\r\n            C317.743,324.549,317.722,324.564,317.732,324.556L317.732,324.556c0.349-0.261,0.796-0.362,1.222-0.285l7.869,1.462l-30.254,42.336\r\n            c-0.757,1.06-2.123,1.444-3.322,0.935l-22.304-9.475c-0.004-0.002,0.004,0.002,0,0l0,0L317.732,324.556z M255.999,351.965\r\n            l-43.717-32.676c4.13-5.422,6.623-12.323,6.623-19.192v-4.392c11.572,4.848,23.937,7.383,37.011,7.529c0.028,0,0.056,0,0.084,0\r\n            c0.028,0,0.056,0,0.084,0c13.074-0.147,25.439-2.682,37.011-7.529v4.392c0,6.87,2.493,13.77,6.622,19.192L255.999,351.965z\r\n            M270.602,375.687l-6.834,7.945h-15.537l-6.834-7.945l14.602-6.203L270.602,375.687z M148.082,104.394\r\n            c-9.642-5.944-14.836-12.51-14.836-19.003c0-13.524,18.067-31.914,34.854-43.278c14.956-10.123,46.262-27.108,87.899-27.108\r\n            s72.943,16.985,87.899,27.109c16.787,11.364,34.854,29.754,34.854,43.278c0,6.492-5.194,13.059-14.836,19.003V90.752\r\n            c0-10.595-7.171-19.828-17.44-22.453c-19.423-4.964-57.616-13.292-95.174-13.307c-0.034,0-0.062,0-0.096,0\r\n            c-32.523,0-64.835,7.161-86.218,13.171c-9.954,2.798-16.906,11.972-16.906,22.309L148.082,104.394L148.082,104.394z\r\n            M328.791,124.665h16.606c-0.013,0.015-0.024,0.03-0.037,0.044c-0.122,0.135-0.256,0.271-0.384,0.406\r\n            c-0.268,0.283-0.542,0.566-0.836,0.85c-0.184,0.177-0.38,0.353-0.574,0.53c-0.258,0.236-0.521,0.471-0.798,0.707\r\n            c-0.26,0.221-0.531,0.441-0.807,0.661c-0.23,0.184-0.463,0.368-0.704,0.552c-0.35,0.266-0.711,0.532-1.083,0.796\r\n            c-0.18,0.128-0.363,0.257-0.548,0.385c-0.456,0.314-0.923,0.627-1.409,0.938c-0.104,0.067-0.21,0.133-0.316,0.2\r\n            c-3.118,1.962-6.833,3.855-11.079,5.611c-0.089,0.037-0.169,0.089-0.256,0.129c-16.074,6.626-40.229,11.633-70.565,11.633\r\n            s-54.491-5.007-70.565-11.633c-0.087-0.04-0.167-0.092-0.256-0.129c-4.246-1.756-7.961-3.649-11.079-5.611\r\n            c-0.105-0.067-0.212-0.133-0.316-0.2c-0.486-0.311-0.954-0.624-1.409-0.938c-0.185-0.128-0.368-0.256-0.548-0.385\r\n            c-0.372-0.264-0.733-0.53-1.083-0.796c-0.241-0.184-0.474-0.368-0.704-0.552c-0.276-0.22-0.547-0.44-0.807-0.661\r\n            c-0.277-0.236-0.54-0.471-0.798-0.707c-0.194-0.177-0.39-0.353-0.574-0.53c-0.294-0.284-0.569-0.567-0.836-0.85\r\n            c-0.128-0.135-0.262-0.271-0.384-0.406c-0.013-0.015-0.024-0.03-0.037-0.044h125.954c4.143,0,7.502-3.359,7.502-7.502\r\n            c0-4.144-3.359-7.502-7.502-7.502H163.087V90.473c0-3.644,2.451-6.878,5.961-7.864c20.477-5.756,51.341-12.612,82.158-12.612\r\n            c0.028,0,0.061,0,0.089,0c35.919,0.015,72.724,8.05,91.465,12.84c3.621,0.925,6.15,4.18,6.15,7.915v18.908h-20.12\r\n            c-4.143,0-7.502,3.359-7.502,7.502C321.288,121.307,324.647,124.665,328.791,124.665z M348.911,141.447v17.432\r\n            c-3.422,0.615-7.596,1.766-11.721,3.904v-14.616C341.823,145.992,345.692,143.734,348.911,141.447z M174.809,148.168v14.616\r\n            c-4.125-2.138-8.299-3.288-11.721-3.903v-17.434C166.307,143.734,170.175,145.992,174.809,148.168z M201.229,267.183\r\n            c-15.365-13.229-24.44-33.055-24.898-54.394c-0.087-4.079-3.42-7.341-7.5-7.341h-5.969c-4.564,0-8.278-3.713-8.278-8.278v-17.488\r\n            c0-2.517,1.135-4.849,3.044-6.403c2.645,0.234,7.583,1.027,11.771,3.687c0.042,0.027,0.083,0.053,0.125,0.08\r\n            c0.591,0.382,1.165,0.803,1.716,1.264c0.064,0.053,0.128,0.107,0.191,0.162c0.268,0.231,0.531,0.469,0.786,0.721\r\n            c0.223,0.22,0.456,0.425,0.694,0.621c0.07,0.058,0.141,0.112,0.212,0.168c0.18,0.141,0.363,0.275,0.55,0.402\r\n            c0.074,0.05,0.146,0.101,0.221,0.149c0.254,0.164,0.511,0.319,0.776,0.458c0.001,0.001,0.003,0.002,0.004,0.003\r\n            c0.269,0.141,0.544,0.267,0.823,0.383c0.077,0.032,0.155,0.061,0.233,0.091c0.212,0.083,0.425,0.158,0.641,0.226\r\n            c0.081,0.026,0.161,0.052,0.243,0.075c0.283,0.082,0.568,0.154,0.856,0.211c0.005,0.001,0.009,0.002,0.014,0.003\r\n            c0.296,0.058,0.595,0.099,0.895,0.131c0.081,0.009,0.162,0.014,0.242,0.02c0.227,0.019,0.455,0.03,0.684,0.033\r\n            c0.052,0.001,0.103,0.007,0.154,0.007c0.033,0,0.067-0.005,0.1-0.005c0.295-0.003,0.591-0.015,0.887-0.043\r\n            c0.008-0.001,0.016-0.001,0.023-0.001c0.303-0.03,0.606-0.077,0.908-0.135c0.085-0.016,0.17-0.036,0.255-0.054\r\n            c0.224-0.049,0.447-0.105,0.67-0.168c0.088-0.025,0.176-0.049,0.264-0.077c0.296-0.094,0.59-0.196,0.881-0.317\r\n            c3.868-1.615,6.367-5.363,6.367-9.551v-17.942c19.318,6.084,43.071,9.23,66.186,9.23c23.115,0,46.868-3.146,66.186-9.23v17.942\r\n            c0,4.188,2.499,7.937,6.367,9.551c0.292,0.122,0.588,0.225,0.885,0.319c0.084,0.026,0.168,0.049,0.252,0.074\r\n            c0.228,0.065,0.457,0.123,0.687,0.172c0.08,0.017,0.16,0.036,0.241,0.051c0.607,0.116,1.219,0.175,1.829,0.18\r\n            c0.031,0,0.063,0.005,0.094,0.005c0.048,0,0.096-0.006,0.145-0.007c0.235-0.003,0.469-0.015,0.703-0.034\r\n            c0.076-0.006,0.152-0.011,0.228-0.019c0.6-0.063,1.193-0.179,1.773-0.347c0.079-0.023,0.157-0.048,0.236-0.073\r\n            c0.218-0.068,0.433-0.145,0.647-0.228c0.077-0.03,0.155-0.059,0.231-0.091c0.279-0.116,0.555-0.242,0.824-0.383\r\n            c0.002-0.001,0.004-0.002,0.006-0.003c0.264-0.139,0.521-0.294,0.774-0.457c0.075-0.048,0.148-0.1,0.223-0.15\r\n            c0.186-0.127,0.369-0.261,0.548-0.401c0.072-0.056,0.144-0.111,0.214-0.169c0.238-0.197,0.471-0.401,0.693-0.621\r\n            c0.252-0.25,0.514-0.485,0.779-0.714c0.069-0.06,0.139-0.119,0.209-0.178c0.246-0.206,0.495-0.405,0.75-0.594\r\n            c0.024-0.018,0.046-0.036,0.07-0.054c0.276-0.203,0.557-0.393,0.841-0.578c0.076-0.05,0.153-0.098,0.23-0.147\r\n            c0.253-0.159,0.509-0.313,0.766-0.459c0.037-0.021,0.074-0.044,0.112-0.065c0.293-0.163,0.588-0.317,0.885-0.464\r\n            c0.074-0.037,0.148-0.072,0.222-0.108c0.266-0.128,0.533-0.252,0.8-0.368c0.037-0.016,0.073-0.033,0.11-0.049\r\n            c0.308-0.132,0.616-0.255,0.923-0.372c0.055-0.021,0.109-0.041,0.164-0.061c0.292-0.109,0.583-0.212,0.873-0.308\r\n            c0.016-0.005,0.032-0.011,0.048-0.016c0.325-0.107,0.648-0.206,0.967-0.298c0.012-0.003,0.024-0.007,0.036-0.01\r\n            c2.285-0.656,4.379-0.945,5.803-1.072c1.91,1.555,3.045,3.886,3.045,6.404v17.488c0,4.565-3.714,8.278-8.278,8.278h-5.969\r\n            c-4.081,0-7.413,3.262-7.5,7.341c-0.458,21.339-9.533,41.165-24.898,54.394c-15.933,13.719-34.359,20.8-54.771,21.046\r\n            C235.589,287.983,217.162,280.903,201.229,267.183z M241.054,359.529C241.049,359.531,241.059,359.527,241.054,359.529\r\n            l-22.303,9.475c-1.201,0.508-2.566,0.123-3.322-0.934l-30.254-42.336l7.869-1.462c0.428-0.078,0.873,0.024,1.222,0.285l0,0\r\n            c0.011,0.008-0.011-0.008,0,0L241.054,359.529L241.054,359.529z M237.632,496.995l13.687-98.358h9.36l13.687,98.358H237.632z\r\n            M438.144,487.655c0,5.15-4.19,9.34-9.34,9.34h-30.008v-60.833c0-4.144-3.359-7.502-7.502-7.502s-7.502,3.358-7.502,7.502v60.833\r\n            h-94.275l-14.409-103.538l9.99-11.614l2.285,0.971c2.282,0.969,4.657,1.435,6.998,1.435c5.579,0,10.962-2.649,14.397-7.457\r\n            l34.327-48.036l43.261,8.036c2.257,0.677,4.46,1.468,6.616,2.345c-7.934,8.864-8.523,22.455-0.819,32.01l8.165,10.126\r\n            c4.147,5.143,10.048,8.363,16.617,9.067c0.898,0.097,1.794,0.145,2.685,0.145c5.567,0,10.926-1.871,15.341-5.381\r\n            c2.088,6.826,3.172,13.971,3.172,21.283v81.268H438.144z\"/>\r\n        <path d=\"M358.407,428.66h-39.509c-6.758,0-12.256,5.498-12.256,12.256v21.049c0,6.758,5.498,12.256,12.256,12.256h39.509\r\n            c6.758,0,12.255-5.498,12.255-12.256v-21.049C370.662,434.157,365.164,428.66,358.407,428.66z M355.657,459.215h-34.011v-15.551\r\n            h34.011L355.657,459.215L355.657,459.215z\"/>\r\n        <path d=\"M193.102,474.22c6.758,0,12.256-5.498,12.256-12.256v-21.049c0-6.758-5.498-12.256-12.256-12.256h-39.509\r\n            c-6.758,0-12.255,5.498-12.255,12.256v21.049c0,6.758,5.498,12.256,12.255,12.256H193.102z M156.341,443.664h34.011v15.551h-34.011\r\n            V443.664z\"/>\r\n    </svg>\r\n)\r\nexport const SheriffIcon = props => <Icon component={SheriffSvg} {...props} />;\r\n\r\nconst WomanSvg = () => (\r\n    <svg height=\"30px\" width=\"30px\" viewBox=\"0 0 480.001 480.001\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"m394.001 424.74v39.26c0 4.42-3.58 8-8 8h-292c-4.42 0-8-3.58-8-8v-39.26c0-24.47 11.79-46.19 30-59.79v-257.45c0-54.95 44.55-99.5 99.5-99.5h50c54.95 0 99.5 44.55 99.5 99.5v258.22c17.64 13.63 29 35 29 59.02z\" fill=\"#ffdfba\"/><path d=\"m394.001 424.74v39.26c0 4.42-3.58 8-8 8h-292c-4.42 0-8-3.58-8-8v-39.26c0-41.137 33.344-74.57 74.57-74.57 9.15 0 17.61-2.96 24.47-7.98l1.8 11.65 48.26 37.37c2.89 2.23 6.91 2.23 9.8 0l48.26-37.37 1.8-11.65c6.86 5.02 15.32 7.98 24.47 7.98 41.08 0 74.57 33.304 74.57 74.57z\" fill=\"#ffa4b8\"/><path d=\"m293.161 353.84-18.2 118.16h-69.92l-18.2-118.16 48.262 37.368c2.883 2.233 6.912 2.233 9.795 0z\" fill=\"#d6f4fc\"/><path d=\"m339.001 210.13v-49.313c0-3.362-2.094-6.369-5.256-7.513-17.401-6.293-32.092-18.417-41.536-34.614-2.756-4.726-9.312-5.417-12.892-1.281-32.96 38.083-78.399 63.258-131.268 69.688-4.022.489-7.048 3.888-7.048 7.939v15.092c0 41.27 25.25 76.64 61.15 91.5l-.15.37v6.83c0 22.896-18.605 41.34-41.43 41.34-16.71 0-32.13 5.5-44.57 14.78 0-7.983 0-265.027 0-257.45 0-54.952 44.548-99.5 99.5-99.5h50c54.952 0 99.5 44.548 99.5 99.5v258.22c-12.6-9.75-28.41-15.55-45.57-15.55-22.8 0-41.43-18.42-41.43-41.34v-6.828l-.15-.37c35.9-14.86 61.15-50.23 61.15-91.5z\" fill=\"#c79a83\"/><path d=\"m333.744 153.305c3.162 1.143 5.256 4.15 5.256 7.513v49.313c0 41.27-25.25 76.64-61.15 91.5-64.917 26.947-136.85-20.924-136.85-91.5v-15.092c0-4.052 3.026-7.45 7.048-7.939 52.839-6.426 98.288-31.583 131.268-69.688 3.58-4.137 10.136-3.445 12.892 1.281 9.437 16.182 24.121 28.314 41.536 34.612z\" fill=\"#ffebd2\"/><path d=\"m279.131 318.42c-24.637 10.313-51.712 11.113-78.26 0 1.356-5.626 1.13-9.27 1.13-16.42l.15-.37c24.082 9.996 51.571 10.016 75.7 0l.15.37c0 7.153-.226 10.796 1.13 16.42z\" fill=\"#ffd6a6\"/><path d=\"m302.973 15.297c12.188 4.959 8.15 23.053-5.005 22.733-2.017-.049-53.472-.03-52.468-.03-54.952 0-99.5 44.548-99.5 99.5v44.397c0 7.291-5 7.489-5 13.143 0 15.988-.747 27.884 4.432 44.475.366 1.172.568 2.39.568 3.618v99.252c0 5.125-3.252 9.745-8.134 11.306-7.95 2.541-15.318 6.377-21.866 11.26v-257.451c0-54.952 44.548-99.5 99.5-99.5h50c13.258 0 25.909 2.592 37.473 7.297z\" fill=\"#e0b7a3\"/><path d=\"m217.991 273.393c16.687 10.386 3.507 36.002-14.736 28.687-37.03-14.847-62.254-50.788-62.254-91.951v-15.09c0-4.045 3.013-7.45 7.029-7.937 3.79-.46 7.707-1.039 11.728-1.753 5.779-1.027 11.216 3.103 11.722 8.951 3.164 36.589 21.694 63.648 46.511 79.093z\" fill=\"#fff3e4\"/><path d=\"m190.741 379.15c-46.89 1.204-75.74 36.509-75.74 74.59v18.26h-21c-4.418 0-8-3.582-8-8v-39.26c0-41.137 33.344-74.57 74.57-74.57 9.15 0 17.61-2.96 24.47-7.98 2.274 14.72 1.078 6.966 5.7 36.96z\" fill=\"#ffb1bf\"/><path d=\"m289.261 379.15c46.89 1.204 75.74 36.509 75.74 74.59v18.26h21c4.418 0 8-3.582 8-8v-39.26c0-41.137-33.344-74.57-74.57-74.57-9.15 0-17.61-2.96-24.47-7.98-2.275 14.72-1.079 6.966-5.7 36.96z\" fill=\"#ff99af\"/><path d=\"m225.041 472h-20l-18.2-118.16 22.71 17.58z\" fill=\"#bdeffc\"/><path d=\"m402.001 424.743v47.257c0 4.418-3.582 8-8 8s-8-3.582-8-8v-47.257c0-36.794-29.775-66.572-66.573-66.571-6.405 0-12.588-1.21-18.302-3.467l-18.26 118.514c-.672 4.369-4.76 7.361-9.124 6.688-4.367-.673-7.361-4.758-6.688-9.125l19.3-125.265c-3.517-3.176-6.628-6.876-9.184-11.073-2.299-3.773-1.104-8.695 2.67-10.994 3.772-2.3 8.695-1.103 10.994 2.67 6.059 9.946 16.761 16.051 28.594 16.051 45.636 0 82.573 36.93 82.573 82.572zm-132.14-52.86c-2.706-3.493-7.73-4.134-11.224-1.428l-18.637 14.428-45.744-35.415-.611-3.963c9.199-8.286 15.161-19.74 16.185-32.718 68.296 20.106 136.619-31.147 137.166-101.824.005-.178.003-55.785.003-55.963 0-3-1.723-5.859-4.551-7.21-1.745-.837-34.143-7.798-48.014-42.741-2.282-5.752-10.012-6.86-13.796-1.901-29.275 38.373-70.847 64.005-117.444 73.241-4.334.859-7.15 5.069-6.292 9.403.756 3.809 4.099 6.446 7.839 6.446 2.01 0 69.356-9.956 120.584-69.472 10.653 18.22 26.964 31.263 45.674 38.044v49.316c0 50.178-40.822 91-91 91-46.964 0-91-36.503-91-94.125 0-4.418-3.582-8-8-8s-8 3.582-8 8c0 .414-.008 4.417.013 4.815.652 41.825 25.424 77.904 60.987 94.908v2.107c0 8.913-3.476 17.287-9.787 23.581-11.232 11.199-25.725 9.761-23.642 9.761-12.9 0-25.339 2.959-36.571 8.519v-243.192c0-50.453 41.047-91.5 91.5-91.5h50c50.453 0 91.5 41.047 91.5 91.5v216.5c0 4.418 3.582 8 8 8s8-3.582 8-8v-216.5c0-59.276-48.225-107.5-107.5-107.5h-50c-59.275 0-107.5 48.224-107.5 107.5v253.57c-19.144 15.864-30 38.892-30 63.673v47.257c0 4.418 3.582 8 8 8s8-3.582 8-8v-47.257c0-17.782 6.925-34.5 19.499-47.074 22.224-22.224 50.474-19.498 47.075-19.498 6.37 0 12.552-1.205 18.298-3.488l18.263 118.534c.608 3.954 4.016 6.783 7.896 6.783 4.923 0 8.661-4.382 7.916-9.219l-15.151-98.339 37.307 28.883c2.889 2.236 6.917 2.229 9.795 0l23.534-18.22c3.494-2.704 4.134-7.729 1.43-11.222z\"/></svg>\r\n)\r\nexport const WomanIcon = props => <Icon component={WomanSvg} {...props} />;\r\n\r\nexport const PlayerIcon = ({role}) => {\r\n    if(role === 'Мирная жительница') return <WomanIcon />;\r\n    if(role === 'Мирный житель') return <ManIcon />;\r\n    if(role === 'Шериф') return <SheriffIcon />;\r\n    if(role === 'Мафия') return <MafiaIcon />;\r\n    if(role === 'Дон') return <DonIcon />;\r\n    return <></>;\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectPlayers } from '../../model/playersSlice.js';\r\nimport {\r\n    selectIsPlaying,\r\n    selectGameCycle,\r\n    selectCurrentTimeOfDay\r\n } from '../../model/gameSlice.js';\r\nimport {\r\n    kill, kick, setName, editName,\r\n    editRole, setRole, setFine\r\n} from '../../model/playersSlice.js';\r\nimport { play, setNextTime } from '../../model/gameSlice.js';\r\nimport { Input, Select, Checkbox, Table, Button, Space, Typography } from 'antd';\r\nimport { PlayerIcon } from '../Icons/Icons';\r\nimport './PlayersTable.scss';\r\n\r\nconst { Text } = Typography;\r\nconst { Option } = Select;\r\nconst playersRole = ['Мирный житель', 'Мирная жительница', 'Мафия', 'Дон', 'Шериф'];\r\n\r\nexport const PlayersTable = () => {\r\n    // selectors\r\n    const players = useSelector(selectPlayers);\r\n    const isPlaying = useSelector(selectIsPlaying);\r\n    const gameCycle = useSelector(selectGameCycle);\r\n    const currentTimeOfDay = useSelector(selectCurrentTimeOfDay);\r\n    // getting dispatch\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log(players)\r\n    }, [players]);\r\n\r\n    const handleKeyPress = (e, name, id) => {\r\n        if (e.key === 'Enter' && name) dispatch(editName(id));\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '№',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Игрок',\r\n            dataIndex: 'name',\r\n            render: (_, { id, name, isEditingName, killed, kicked }) => (\r\n                isEditingName ? (\r\n                    <Input\r\n                        onChange={e => dispatch(setName({id, name: e.target.value}))}\r\n                        value={name}\r\n                        placeholder=\"Напишите имя игрока\"\r\n                        onBlur={() => name ? dispatch(editName(id)) : null}\r\n                        onKeyPress={(e) => handleKeyPress(e, name, id)}\r\n                    />\r\n                ) : (\r\n                    <>\r\n                        <Text \r\n                            type={killed || kicked ? 'danger' : null}\r\n                            delete={killed || kicked}\r\n                            onDoubleClick={() => dispatch(editName(id))}\r\n                        >\r\n                            {name}\r\n                        </Text>\r\n                    </>\r\n                )\r\n            ),\r\n        },\r\n        {\r\n            title: 'Роль',\r\n            dataIndex: 'role',\r\n            render: (_, { id, isEditingRole, killed, kicked, role }) => (\r\n                isEditingRole ? (\r\n                    <Select \r\n                        {...(role ? {defaultValue: role} : null)}\r\n                        onBlur={() => role ? dispatch(editRole(id)) : null}\r\n                        style={{ width: 200 }}\r\n                        onChange={(role) => dispatch(setRole({id, role}))}\r\n                        placeholder=\"Выберете роль игрока\"\r\n                    >\r\n                        {playersRole.map((role, i) => <Option key={i} value={role}>{role}</Option>)}\r\n                    </Select>\r\n                ) : (\r\n                    <Space style={{display: 'flex', alignItems: 'center'}}>\r\n                        {role && <PlayerIcon role={role} />}\r\n                        <Text \r\n                            type={killed || kicked ? 'danger' : null}\r\n                            delete={killed || kicked}\r\n                            onDoubleClick={() =>\r\n                            dispatch(editRole(id))}\r\n                        >\r\n                            {role}\r\n                        </Text>\r\n                    </Space>\r\n                )\r\n                \r\n            )\r\n        },\r\n        {\r\n            title: 'Замечания',\r\n            dataIndex: 'fines',\r\n            render: (_, { fines, id }) => (\r\n                Object.keys(fines).map(fine => (\r\n                    <Checkbox\r\n                        key={fine}\r\n                        onChange={() => dispatch(setFine({id, fine}))}\r\n                        checked={fines[fine]}\r\n                        disabled={!isPlaying}\r\n                    />\r\n                ))\r\n            )\r\n        },\r\n        ...gameCycle.map(({key, title}) => ({\r\n            title: title,\r\n            dataIndex: key,\r\n            render: (_, { lifeCycle }) => <Text>{lifeCycle[key]}</Text>\r\n        })),\r\n        {\r\n            title: 'Действия',\r\n            dataIndex: 'actions',\r\n            render: (_, { id, killed, kicked }) => (\r\n                <Space size=\"small\">\r\n                    <Button\r\n                        type=\"default\"\r\n                        danger={!killed}\r\n                        onClick={() => dispatch(kill({id, lifeCycleKey: gameCycle[currentTimeOfDay].key}))}\r\n                        disabled={kicked || !isPlaying}\r\n                    >\r\n                        {killed ? 'Возрадить' : 'Убить'}\r\n                    </Button>\r\n                    <Button\r\n                        type=\"default\"\r\n                        danger={!kicked}\r\n                        onClick={() => dispatch(kick({id, lifeCycleKey: gameCycle[currentTimeOfDay].key}))}\r\n                        disabled={killed || !isPlaying}\r\n                    >\r\n                        {kicked ? 'Освободить' : 'Посадить'}\r\n                    </Button>\r\n                </Space>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Text style={{paddingBottom: '10px', display: 'block'}}>Количество игроков: {players.filter(({killed, kicked}) => !killed && !kicked).length}</Text>\r\n            <nav>\r\n                <Button disabled={isPlaying} type=\"primary\" onClick={() => dispatch(play())}>\r\n                    Начать игру\r\n                </Button>\r\n                <Text style={{ fontSize: '32px' }}>\r\n                   { currentTimeOfDay !== null ? 'Сейчас ' + gameCycle[currentTimeOfDay].fullTitle.toLowerCase() : 'Игра не началась'}\r\n                </Text>\r\n                <Space size=\"small\">\r\n                    <Button\r\n                        type=\"primary\"\r\n                        disabled={!isPlaying || currentTimeOfDay === 0}\r\n                        onClick={() => {dispatch(setNextTime('return'))}}\r\n                    >\r\n                        Вернуться\r\n                    </Button>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        disabled={!isPlaying || currentTimeOfDay === 7 || gameCycle[currentTimeOfDay].key[1] === 'd'}\r\n                        onClick={() => {dispatch(setNextTime())}}\r\n                    >\r\n                        День\r\n                    </Button>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        disabled={!isPlaying || currentTimeOfDay === 7 || gameCycle[currentTimeOfDay].key[1] === 'n'}\r\n                        onClick={() => {dispatch(setNextTime())}}\r\n                    >\r\n                        Ночь\r\n                    </Button>\r\n                </Space> \r\n            </nav>\r\n            <Table dataSource={players} columns={columns} pagination={false} />\r\n        </>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport s from './Timer.module.scss';\r\nimport { Space, Button } from 'antd';\r\n\r\nexport const Timer = () => {\r\n    const [seconds, setSeconds] = useState(60 * 1000);\r\n    const [pause, setPause] = useState(false);\r\n    const [start, setStart] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(start && !pause) {\r\n            if(seconds !== 1000) {\r\n                changeTime();\r\n            } else {\r\n                resetTimer();\r\n            }\r\n        }\r\n    });\r\n\r\n    const changeTime = () => {\r\n        if(start && !pause) setTimeout(() => setSeconds(seconds - 100), 100);\r\n    }\r\n\r\n    const resetTimer = () => {\r\n        setStart(false);\r\n        setTimeout(() => setSeconds(60 * 1000), 100);\r\n    }\r\n\r\n    const startTimer = () => {\r\n        setStart(true);\r\n        setPause(false)\r\n    }\r\n\r\n    const formatTime = (seconds) => {\r\n        let date = new Date(seconds);\r\n        return `${(\"00\" + date.getMinutes()).slice(-2)}:${(\"00\" + date.getSeconds()).slice(-2)}`;; \r\n    }\r\n\r\n    return(\r\n        <div className={s.timer}>\r\n            <span className={[(seconds <= 10000 ? s.timer__currentDanger : ''), s.timer__current].join(' ')}>{formatTime(seconds)}</span>\r\n            <Space>\r\n                <Button onClick={startTimer}>Старт</Button>\r\n                <Button onClick={() => setPause(true)}>Пауза</Button>\r\n                <Button onClick={resetTimer}>Обнулить</Button>\r\n            </Space>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { PlayersTable } from './components/PlayersTable/PlayersTable.jsx';\r\nimport { Timer } from './components/Timer/Timer';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Timer />\r\n\t\t\t<PlayersTable />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { playersReducer } from './playersSlice.js';\r\nimport { gameReducer } from './gameSlice.js';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        players: playersReducer,\r\n        game: gameReducer,\r\n    },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport store from './model/store.js';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker.js';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nwindow.__store__ = store.getState();\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__3Na-Q\",\"timer__current\":\"Timer_timer__current__2oQWF\",\"timer__currentDanger\":\"Timer_timer__currentDanger__1plL0\"};"],"sourceRoot":""}